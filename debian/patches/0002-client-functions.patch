From: Juan Pelegrina <juapesai@hotmail.com>
Date: Tue, 17 Nov 2020 09:43:08 +0100
Subject: client-functions

---
 data/client-functions | 55 +++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 45 insertions(+), 10 deletions(-)

diff --git a/data/client-functions b/data/client-functions
index c6b9881..db1c8a4 100644
--- a/data/client-functions
+++ b/data/client-functions
@@ -31,6 +31,7 @@
 # For user sessions, ping() aborts when X isn't running.
 # Root connections abort when the system is shutting down.
 # Also, epoptes-client kills -QUIT all the other epoptes-client processes.
+
 on_signal() {
     # local code  # we can't do that, it resets $?
 
@@ -111,6 +112,7 @@ info() {
             read def_iface IP <<EOF
 $(ip route get "$server_ip" | sed -n 's/.*dev *\([^ ]*\).*src *\([^ ]*\).*/\1 \2/p')
 EOF
+            #START LLIUREX
             test "${def_iface:-lo}" != "lo" || read def_iface IP <<EOF
 $(ip route get 192.168.67.0 | sed -n 's/.*dev *\([^ ]*\).*src *\([^ ]*\).*/\1 \2/p')
 EOF
@@ -155,18 +157,24 @@ EOF
 background() {
     local print_pid
 
-    ensure_display
+    #ensure_display
     if [ "$1" = "-p" ]; then
         print_pid=true
         shift
     fi
+    
+    # START LLIUREX
+    # On root clients, try to get the active DISPLAY, the command may need it.
+    test "$UID" -eq 0 && export $(./get-display)
+
     # The command is run on a subshell with stdin and stdout redirected to
     # /dev/null, so that it doesn't interfere with the output of other commands.
     # stderr isn't changed, i.e. ~/.xsession-errors will be used.
     # See issues #58 and #103 for explanation of the following syntax.
-    ( unset DESKTOP_AUTOSTART_ID; exec 0</dev/null >/dev/null; "$@" ) &
-
+    #( unset DESKTOP_AUTOSTART_ID; exec 0</dev/null >/dev/null; "$@" ) &
+    ( "$@" 0</dev/null >/dev/null ) &
     test -n "$print_pid" && echo $!
+    #END LLIUREX
 }
 
 # Execute a command in the background.
@@ -340,7 +348,10 @@ message() {
 # Parameters:
 # $1 = port.
 get_monitored() {
-    background x11vnc -noshm -24to32 -viewonly -connect_or_exit "$SERVER:$1"
+	# START LLIUREX
+	#background x11vnc -noshm -24to32 -viewonly -connect_or_exit "$SERVER:$1"
+    background x11vnc -noshm -24to32 -viewonly -connect_or_exit "$1"
+    # END LIUREX
 }
 
 # Connect to the server to get assistance.
@@ -348,7 +359,10 @@ get_monitored() {
 # $1 = port.
 # $2 = grab keyboard and mouse.
 get_assisted() {
-    background x11vnc -noshm -24to32 ${2:+-grabptr -grabkbd} -connect_or_exit "$SERVER:$1"
+	# START LLIUREX
+    #background x11vnc -noshm -24to32 ${2:+-grabptr -grabkbd} -connect_or_exit "$SERVER:$1"
+	background x11vnc -noshm -24to32 ${2:+-grabptr -grabkbd} -connect_or_exit "$1"
+	# END LLIUREX
 }
 
 # Deactivate the screensaver, in order for the users to watch a broadcast.
@@ -382,17 +396,33 @@ receive_broadcast() {
     printf "$2" | {
         sleep 0.$(($(hexdump -e \"%d\" -n 2 /dev/urandom) % 50 + 50))
         if [ "$VNCVIEWER" = "ssvncviewer" ]; then
+        	#START LLIUREX	
+        	#exec ssvncviewer -shared -viewonly -passwd /dev/stdin \
+            #    ${3:+-fullscreen} "$SERVER:$1"
             exec ssvncviewer -shared -viewonly -passwd /dev/stdin \
-                ${3:+-fullscreen} "$SERVER:$1"
+                ${3:+-fullscreen} "$1"
+            #END LLIUREX
         elif [ "$VNCVIEWER" = "xvnc4viewer" ]; then
+            #START LLIUREX
+            #exec ${VNCVIEWER} -Shared -ViewOnly -passwd /dev/stdin \
+            #    ${3:+-FullScreen -UseLocalCursor=0 -MenuKey F13} "$SERVER:$1"
             exec ${VNCVIEWER} -Shared -ViewOnly -passwd /dev/stdin \
-                ${3:+-FullScreen -UseLocalCursor=0 -MenuKey F13} "$SERVER:$1"
+                ${3:+-FullScreen -UseLocalCursor=0 -MenuKey F13} "$1"
+            #END LLIUREX
         elif [ "$VNCVIEWER" = "xtigervncviewer" ]; then
+            #START LLIUREX
+            #exec ${VNCVIEWER} -Shared -ViewOnly -passwd /dev/stdin \
+	        #    ${3:+-FullScreen -MenuKey F13} "$SERVER:$1"
             exec ${VNCVIEWER} -Shared -ViewOnly -passwd /dev/stdin \
-                ${3:+-FullScreen -MenuKey F13} "$SERVER:$1"
+                ${3:+-FullScreen -MenuKey F13} "$1"
+        	#END LLIUREX
         else
+        	#START LLIUREX
+        	#exec vncviewer -shared -viewonly -passwd /dev/stdin \
+            #    ${3:+-fullscreen} "$SERVER:$1"
             exec vncviewer -shared -viewonly -passwd /dev/stdin \
-                ${3:+-fullscreen} "$SERVER:$1"
+                ${3:+-fullscreen} "$1"
+        	#END LLIUREX
         fi
     } >/dev/null 2>&1 &
     xprop_set EPOPTES_VNCVIEWER_PID "$!"
@@ -420,10 +450,14 @@ root_term() {
 # Send a screen session to the server using socat.
 # Parameters:
 # $1 = port.
+# LLIUREX: Changed: $SERVER:$1 by REM
 remote_term() {
+	
     local screen_params
 
+    REM=$1
     if [ "$UID" -eq 0 ]; then
+        REM="$SERVER:${1#*:}"
         screen_params="bash -l"
     else
         screen_params="-l"
@@ -431,7 +465,8 @@ remote_term() {
     background sh -c "
 cd
 sleep 1
-TERM=xterm exec socat EXEC:'screen $screen_params',pty,stderr tcp:$SERVER:$1"
+TERM=xterm exec socat EXEC:'screen $screen_params',pty,stderr tcp:$REM"
+
 }
 
 # Ping is called every few seconds just to make sure the connection is alive.
